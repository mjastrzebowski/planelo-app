webpackJsonp([10],{534:function(t,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=o(0),i=o(17),r=o(546),a=o(422);o.d(e,"CommonImportModule",function(){return c});var s=this&&this.__decorate||function(t,e,o,n){var i,r=arguments.length,a=r<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,o,n);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(r<3?i(a):r>3?i(e,o,a):i(e,o))||a);return r>3&&a&&Object.defineProperty(e,o,a),a},c=function(){function t(){}return t}();c=s([o.i(n.b)({declarations:[r.a],imports:[a.a,i.d.forChild(r.a)],exports:[r.a]})],c)},546:function(t,e,o){"use strict";var n=o(0),i=o(17),r=o(21),a=o(28),s=o(60),c=o(46),l=o(61),m=o(45),d=o(62);o.d(e,"a",function(){return p});var f=this&&this.__decorate||function(t,e,o,n){var i,r=arguments.length,a=r<3?e:null===n?n=Object.getOwnPropertyDescriptor(e,o):n;if("object"==typeof Reflect&&"function"==typeof Reflect.decorate)a=Reflect.decorate(t,e,o,n);else for(var s=t.length-1;s>=0;s--)(i=t[s])&&(a=(r<3?i(a):r>3?i(e,o,a):i(e,o))||a);return r>3&&a&&Object.defineProperty(e,o,a),a},u=this&&this.__metadata||function(t,e){if("object"==typeof Reflect&&"function"==typeof Reflect.metadata)return Reflect.metadata(t,e)},p=function(){function t(t,e,o,n,i,r,a){this.alertCtrl=t,this.auth=e,this.clientStore=o,this.notificationStore=n,this.placeStore=i,this.trainerStore=r,this.profileSessionStore=a,this.models=["Notification"],this.model=this.models[0],this.submitted=!1,this.import={}}return t.prototype.resolveItemByKey=function(t,e){return"object"==typeof t?JSON.stringify(t):e.getItemByKey(t)},t.prototype.getAdminId=function(t){switch(t){case"-KBN-b7GjsB6FS8Opmx0":case"-KNSsNzm8WH_t_lwASAz":return 106;case"-KBN-fYLnmIQ_6pSwnV6":return 11;default:return 2}},t.prototype.importNotificationItem=function(t){switch(t.admin=this.getAdminId(t.owner),t.type){case"clientAdded":break;case"clientRemoved":break;case"workoutAdded":break;case"workoutRemoved":break;case"workoutRejected":}t.client=this.resolveItemByKey(t.client,this.clientStore),t.workout=this.resolveItemByKey(t.workout,this.profileSessionStore),this.notificationStore.create(t)},t.prototype.save=function(t){var e=this;this.submitted=!0;var o=r.a.objectToArray(JSON.parse(t.value.db));switch(console.log(this.model),this.model){case this.notificationStore.model:o.forEach(function(t){e.importNotificationItem(t)})}},t.prototype.postChangePassword=function(){this.alertCtrl.create({title:"Zmieniono",message:"Twoje hasło zostało zmienione.",buttons:["Ok"]}).present()},t.prototype.errorChangePassword=function(){this.alertCtrl.create({title:"Błąd",message:"Obecne hasło jest nieprawidłowe.",buttons:["Ok"]}).present()},t}();p=f([o.i(i.e)({name:"import",segment:"import"}),o.i(n.L)({template:'<ion-header>\n  <ion-navbar>\n    <button ion-button icon-only menuToggle="left">\n      <ion-icon name="menu"></ion-icon>\n    </button>\n\n    <ion-title>Import danych</ion-title>\n\n    <ion-buttons end>\n      <notification-counter></notification-counter>\n    </ion-buttons>\n  </ion-navbar>\n</ion-header>\n\n<ion-content class="import-page">\n  <ion-list>\n    <form #form="ngForm" novalidate>\n      <ion-item>\n        <ion-label floating>Model danych</ion-label>\n        <ion-select [(ngModel)]="model" name="model">\n          <ion-option *ngFor="let model of models" [value]="model">{{ model }}</ion-option>\n        </ion-select>\n      </ion-item>\n      <ion-item>\n        <ion-label floating>Dane do importu</ion-label>\n        <ion-textarea [(ngModel)]="import.db" name="db" #db="ngModel" required></ion-textarea>\n      </ion-item>\n\n      <ion-row responsive-sm>\n        <ion-col>\n          <button ion-button (click)="save(form)" type="submit" color="primary" block>Import</button>\n        </ion-col>\n      </ion-row>\n    </form>\n  </ion-list>\n</ion-content>\n'}),u("design:paramtypes",[i.j,a.a,s.a,c.a,l.a,m.a,d.a])],p)}});
//# sourceMappingURL=/Users/mjastrzebowski/GitHub/egobody-david-2.0/public_html/build/10.main.js.map